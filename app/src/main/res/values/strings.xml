<resources>
    <string name="app_name">HomeWorkAndroid</string>
    <string name="exercises001"><b>Exercises001</b></string>
    <string name="exercises001_text"><div text-align="justify">\tРазработайте приложение с одной активностью для расчета треугольника. Используйте <b>LinearLayout</b> с вертикальной ориентацией, три расположенных один под другим элемента <b>TextView</b> для отображения длин сторон треугольника, три кнопки Button для вычисления площади и периметра треугольника, формирования сторон треугольника генератором случайных чисел. Обработчик клика назначайте в файле разметки. Выводите рассчитанные величины в два <b>TextView</b>, размещенные выше кнопок. Конечно же, используйте модель – класс для треугольника.</div></string>
    <string name="sideA">Side A</string>
    <string name="sideB">Side B</string>
    <string name="sideC">Side C</string>
    <string name="area">Area</string>
    <string name="perimetr">Perimetr</string>
    <string name="btn_Area">Calculate Area</string>
    <string name="btn_Perimetr">Calculate Perimetr</string>
    <string name="btn_Generate">Generate Side Values</string>
    <string name="btn_GoToExercises002">Go to Exercises002</string>
    <string name="btn_GoToExercises001">Go to Exercises001</string>
    <string name="exercises002_text"><div text-align="justify">\tРазработайте приложение с одной активностью для ввода данных о покупке. Описание товара должно быть реализовано отдельным классом. Вводите наименование товара, количество, цену единицы товара.  <p>Рассчитайте и выведите сумму к оплате:  <br />Сумма_к_оплате = цена_единицы * количество_товара.<br /> </p> Используйте кнопки <b>Button</b>, элементы ввода <b>EditText</b>, элементы отображения <b>TextView</b> для вывода результата.</div></string>
    <string name="exercises002"><b>Exercises002</b></string>
    <string name="homework001">Home Work 001</string>
    <string name="homework001_text"><div><b>Теоретическая часть</b> \t\n - Краткая характеристика Андроид и разработки под Андроид \t\n - Структура проекта\t\n - Использование файла манифеста для задания иконки приложения \t\n - Разметка интерфейса приложения – контейнер LinearLayout, ориентация элементов вертикальная и горизонтальная \t\n - Идентификаторы элементов интерфейса, элементов строковых ресурсов\t\nПолучение ссылок на элементы интерфейса по идентификаторам этих элементов \t\n - Понятие о dp, sp – пикселях, независимых от разрешения экрана \t\n - Элементы TextView, EditText, Button. \t\n - Реакция на событие клика по кнопке Button – назначение метода-слушателя в разметке, в коде</div></string>
    <string name="btn_ReturnToMain">Return to Main</string>
    <string name="name">Product Name</string>
    <string name="count">Count</string>
    <string name="price">Price</string>
    <string name="summary">Summary:</string>
    <string name="btn_Summary">Summary</string>
    <string name="mainTitle">Home Work</string>
    <string name="student_text">Работы выполнил ст.гр. ВПУ911 \n Хижняк Павел\nКА\"ШАГ\" г.Донецк</string>
    <string name="btn_GoToHW002">Home Work on 13.03.2022</string>
    <string name="btn_GoToHW001">Home Work on 06.03.2022</string>
    <string name="btn_GoToHW002_Exercises001">Go to Exercises001</string>
    <string name="btn_GoToHW002_Exercises002">Go to Exercises002</string>
    <string name="homework002_text"><div><b>Теоретическая часть</b>
\n•	Всплывающие сообщения <b>Snackbar</b>
\n•	Добавление кнопки (<b>Action</b>) всплывающему сообщению <b>Snackbar</b>, изменение цвета текста на кнопке, цвета и других характеристик текста сообщения
\n•	Работа с изображениями – элемент интерфейса <b>ImageView</b>. Загрузка изображения из ресурсов приложения, из папки <b>assets</b> проекта
\n•	Создание папки <b>assets</b>
\n•	Добавление еще одной активности в проект
\n•	Запуск еще одной активности
\n•	Передача примитивных типов в активность
\n•	Передача ссылочных типов в активность – интерфейсы <b>Parcelable</b>, <b>Serializable</b>
\n•	Получение данных из активности – обработчик события получения данных
\n•	Элементы интерфейса: <b>Switch</b>, <b>RadioGroup</b>, <b>RadioButton</b>
\n•	Слушатели событий клика на уровне радиокнопки
\n•	Слушатель события изменения состояния группы радиокнопок
\n•	Решение проблемы сохранения контекста при повороте экрана
\n<b>Практическая часть</b>
\n\tРазработайте приложение из трех активностей. \nНа главной активности разместите кнопки вызова двух активностей для выполнения обработки по заданию и кнопку выхода из приложения. \nМожет также разместить изображения по теме задания.  При вызове активности сгенерировать объект соответствующего класса – для представления животного, торгового судна. Сгенерированные в главной активности данные и данные, полученные из дополнительных активностей выводить в <b>TextView</b> на главной активности.</div>
</string>
    <string name="HW002_exercises001"><b>Exercises001</b></string>
    <string name="HW002_exercises002"><b>Exercises002</b></string>
    <string name="HW002_exercises001_text">\t<b>Активность 1.</b> В эту активность передавайте данные о домашнем животном: порода, кличка, возраст, вес, фамилия и инициалы владельца, имя файла с изображением в папке <b>assets</b>. А также признаки: специальный уход, специальная диета. Выводите полученные данные в поля <b>EditText</b>, <b>RadioButton</b>, <b>CheckBox</b> изображение по имени файла выводите в <b>ImageView</b>. Реализуйте кнопки увеличения и уменьшения возраста на 1 год, очистки полей ввода, возврата из активности. Возвращать измененные данные на главную активность.  Вводить имя файла с изображением не надо, оно определяется из породы животного. Для изменения породы животного используйте группу из пяти радиокнопок (используйте пять файлов с картинкой животного). Обрабатывайте некорректный ввод, выводите сообщения об ошибках в <b>Snackbar</b>. Передачу объекта выполняйте при помощи объекта с интерфейсом <b>Parcelable</b>.</string>
    <string name="HW002_exercises002_text">\t<b>Активность 2.</b> В эту активность передавайте данные о торговом судне: название, грузоподъемность, имя файла с изображением в папке <b>assets</b>, пункт назначения, тип груза и его вес (например: бокситы, 128 900 тонн или каменный уголь, 110 200 тонн), стоимость 1 тонны груза, признаки – требуется ли специальный пирс для разгрузки, место на якорной стоянке, дозаправка судна топливом. Реализуйте кнопки вычисления стоимости груза, увеличения и уменьшения груза с шагом в 20 тонн, очистки полей ввода, возврата из активности. Возвращать измененные данные на главную активность. Тип судна задавайте при помощи группы радиокнопок (три типа судна – балкер, танкер, контейнеровоз и три фотографии). Вводить имя файла с изображением не надо, оно определяется из типа судна. При изменении типа судна изменяйте картинку или выводите изображение – плейсхолдер. Согласование типа груза и типа судна кодировать не надо, просто вводите корректные данные. При изменении веса груза или цены тонны груза пересчитывайте стоимость груза. Обрабатывайте некорректный ввод, выводите сообщения об ошибках в <b>Snackbar</b>. Передачу объекта выполняйте при помощи объекта с интерфейсом <b>Parcelable</b>.</string>
    <string name="homework002">Home Work 002</string>
    <string name="btn_ReturnToHomeWork002">Return To HomeWork002</string>
    <string name="btn_ReturnToHomeWork003">Return To HomeWork003</string>
    <string name="btn_ReturnToHomeWork004">Return To HomeWork004</string>
    <string name="empty_space" />
    <string name="btn_create">Create</string>
    <string name="btn_process">Process</string>
    <string name="head_ship">Ship</string>
    <string name="head_animals">Animal</string>
    <string name="AnimalBreed">Breed</string>
    <string name="AnimalName">Name</string>
    <string name="AnimalAge">Age</string>
    <string name="AnimalWeight">Weight</string>
    <string name="AnimalLastName">LastName</string>
    <string name="AnimalFirstName">FirstName</string>
    <string name="AnimalType">Type</string>
    <string name="btnAnimalActivityBack">Return</string>
    <string name="btnAnimalActivityProcess">Run</string>
    <string name="rgr_age_head">Age Delta</string>
    <string name="rbt_age_inc1">+1</string>
    <string name="rbt_age_dec1">-1</string>
    <string name="loadPicture">Load Picture</string>
    <string name="txv_spinnerType">Choose Type By DropDown List</string>
    <string name="txv_rgrType">Choose Type By Radio Group</string>
    <string name="rgr_choose_ship">Choose Ship</string>
    <string name="rbt_ship_balker">Балкер</string>
    <string name="rbt_ship_conteinerwage">Контейнеровоз</string>
    <string name="rbt_ship_tanker">Танкер</string>
    <string name="rbt_ship_suhogruz">Сухогруз</string>
    <string name="rbt_ship_rolker">Ролкер</string>
    <string name="rbt_ship_parom">Паром</string>
    <string name="ShipType">Type</string>
    <string name="ShipName">Name</string>
    <string name="ShipCarryingCapacity">Carring Capacity</string>
    <string name="ShipDestination">Destination</string>
    <string name="ShipCargoType">Cargo Type</string>
    <string name="CargoWeight">Weight</string>
    <string name="CargoPrice">Price</string>
    <string name="swt_IndicationSpecialPier_use">whether a special pier is required for unloading</string>
    <string name="swt_IndicationAnchoragePlace_use">an anchorage place</string>
    <string name="swt_IndicationRefueling_use">refueling of the ship with fuel</string>
    <string name="btnShipActivityProcess">Run</string>
    <string name="btnShipActivityBack">Return</string>
    <string name="rgr_weight_head">Weight</string>
    <string name="rbt_weight_inc20">+20</string>
    <string name="rbt_weight_dec20">-20</string>
    <string name="Summary">Summary</string>
    <string name="btnSummary">Calculate</string>
    <string name="btn_GoToHW003">Home work on 20.03.2022</string>
    <string name="mni_exit">Exit</string>
    <string name="mni_return">Return</string>
    <string name="mni_animal_adapter">Animals</string>
    <string name="mni_ship_adapter">Ships</string>
    <string name="headerAnimalAdapter">Animals</string>
    <string name="headerShipAdapter">Ships</string>
    <string name="btn_edit">Edit</string>
    <string name="btn_remove">Remove</string>
    <string name="btn_back">Back</string>
    <string name="homework003">Home Work 003</string>
    <string name="homework003_text"><b>Теоретическая часть</b>
        \n•\tДобавление в приложение меню – создание разметки меню
        \n•\tРеализация обработчика выбора в меню
        \n•\tДобавление на активность контекстного меню – создание разметки меню
        \n•\tРеализация обработчика выбора в контекстном меню
        \n•\t<b>ListView</b> – создание элемента отображения, настройка адаптера отображения списка
        \n•\tИсточники данных для <b>ListView</b> – коллекции в коде, массив строк из ресурсов.
        \n•\tПрограммное получение данных для <b>ListView</b> из ресурсов
        \n•\t<b>ListView</b> с указанием источника данных в разметке
        \n•\tРеализация обработчика клика по пункту <b>ListView</b>
        \n•\tУдаление из коллекции и <b>ListView</b>
        \n•\tСоздание собственного адаптера
        \n•\tДобавление обработчика события клика для адаптера
        \n•\tОбработка клика по сложному объекту с кнопками
        \n<b>Практическая часть</b>
        \n\tРазработайте приложение из трех активностей.
        \n\tНа главной активности разместите меню вызова двух активностей для выполнения обработки по заданию и выхода из приложения.
        \n\tМожет также разместить изображения по теме задания.</string>
    <string name="HW003_exercises001_text">•\t<b>Активность 1.</b> В этой активности выводите в <b>ListView</b> сформированный при создании активности список домашних животных со сведениями: порода, кличка, возраст, вес, фамилия и инициалы владельца, имя файла с изображением в папке <b>assets</b>. А также признаки: специальный уход, специальная диета.  По клику на элемент списка данные выбранного животного выводите в отдельной активности с возможностью редактирования.</string>
    <string name="HW003_exercises001"><b>Exercises 001</b></string>
    <string name="HW003_exercises002"><b>Exercises 002</b></string>
    <string name="HW003_exercises002_text">•\t<b>Активность 2.</b> В этой активности выводите список данных о торговом судне: название, грузоподъемность, имя файла с изображением в папке assets, пункт назначения, тип груза и его вес (например: бокситы, 128 900 тонн или каменный уголь, 110 200 тонн), стоимость 1 тонны груза, признаки – требуется ли специальный пирс для разгрузки, место на якорной стоянке, дозаправка судна топливом. По кнопкам в адаптере увеличивайте или уменьшайте вес груза (на 100 тонн за один клик), изменяйте стоимость 1 тонны груза (на 10$ за каждый клик). По клику на элемент списка данные судна выводите в отдельную активность (без возможности редактирования).</string>
    <string name="LoginPageTitle">Home Work 003 Login</string>
    <string name="RegisterApp">Register App</string>
    <string name="warnung">Please Login</string>
    <string name="loginPage_bntRegister">Register</string>
    <string name="loginPage_bntLogIn">LogIn</string>
    <string name="hintEmail">Email</string>
    <string name="hintPassword">password</string>
    <string name="hintLogin">Login</string>
    <string name="hintPhone">Phone</string>
    <string name="registration">Registration</string>
    <string name="welcome_registration">Input All datas</string>
    <string name="cancel">Cancel</string>
    <string name="addLogin">Add</string>
    <string name="btn_GoToHW004">Home Work on 27.03.2022</string>
    <string name="sign_in_window">Sign In</string>
    <string name="welcome_sign_in">Welcome to SignIn</string>
    <string name="signIn">SignIn</string>

    <string name="warnung_email">Warnung Email</string>
    <string name="warnung_pass">Warnung Password</string>
    <string name="error_sign">Failure SignIn</string>
    <string name="warnung_login">Warnung Login</string>
    <string name="warnung_phone">Warnung Phone</string>
    <string name="user_add">User Create</string>
    <string name="btn_GoToLoginHW004">Login</string>

    <string name="homework004">Home Work 004</string>
    <string name="homework004_text"><b>Теоретическая часть</b>
\n•\t	Множественный выбор в ListView
\n•\t	Добавление элемента в коллекцию, отображаемую в ListView
\n•\t	Оптимизация адаптера и View Holder
\n•\t	Выпадающий список Spinner
\n•\t	RecyclerView – современный виджет отображения списочных данных
\n•\t	Обработка выбора элемента в RecyclerView
\n•\t	Создание и использование стилей
\n•\t	Создание и задание темы для приложения и активности
\n•\t	Создание и задание темы для контейнера размещения элементов
\n        <b>Практическая часть</b>
    </string>
    <string name="HW004_exercises001_text">•\t<b>Задача 1.</b> Разработайте приложение для отображения коллекции объектов класса Телевизор с полями для хранения:
\n•\t	производителя и типа телевизора – это одно поле (например, Samsung OLED55DT2020)
\n•\t	имя файла с фотографией телевизора в папке <b>assets</b>
\n•\t	диагонали экрана в дюймах
\n•\t	разрешения по вертикали в пикселях
\n•\t	разрешения по горизонтали в пикселях
\n•\t	цена в рублях
\n\tВ коллекции объектов определить телевизоры с максимальным разрешением по вертикали. Упорядочить копию коллекции:
\n•\t	по убыванию цены
\n•\t	по возрастанию диагонали экрана
\n•\t	по производителю и типу телевизора
\n\tУпорядоченные копии выводить в отдельную активность.
\n\tРеализовать добавление, изменение и удаление элементов коллекции (используйте отдельную активность для редактирования объекта коллекции).
\n\tИспользуйте <b>RecyclerView</b> для отображения коллекции на главной активности, <b>ListView</b> с оптимизированным адаптером для вывода упорядоченных копий.
\n\tПо возможности примените <b>Spinner</b> в активности ввода/редактирования сведений о телевизорах.
\n\tИспользуйте стили оформления элементов интерфейса, тему оформления приложения, активности выводу упорядоченной коллекции.
</string>
    <string name="HW004_exercises001"><b>Exercises 001</b></string>
    <string name="btn_GoToHW004_Exercises001">Go to Exercises001</string>
    <string name="mni_tvshop_adapter">TV Shop</string>
    <string name="HW004_XLabel">x</string>
    <string name="HW004_txvResolution">Resolution</string>
    <string name="HW004_txvSize">Size</string>
    <string name="HW004_txvPrice">Price</string>
    <string name="mni_sort_manufacturer">Sort Manufacturer</string>
    <string name="mni_sort_size">Sort Size</string>
    <string name="mni_sort_desc_price">Sort Price</string>
    <string name="btn_GoToHW005">Home Work on 03.04.2022</string>
    <string name="btn_Exit">Exit</string>
    <string name="btn_GoToHW006">Home Work on 10.04.2022</string>
    <string name="mni_book_adapter">Books</string>
    <string name="btn_GoToHW005_Exercises001">Go to Exercises001</string>
    <string name="btn_GoToHW005_Exercises002">Go to Exercises002</string>
    <string name="HW005_exercises001_text">\t<b>Задача 1.</b> Разработайте приложение для отображения коллекции объектов класса Телевизор с полями для хранения:
        \n•\tпроизводителя и типа телевизора – это одно поле (например, Samsung OLED55DT2020)
        \n•\tимя файла с фотографией телевизора в папке assets
        \n•\tдиагонали экрана в дюймах
        \n•\tразрешения по вертикали в пикселях
        \n•\tразрешения по горизонтали в пикселях
        \n•\tцена в рублях В коллекции объектов определить телевизоры с максимальным разрешением по вертикали. Упорядочить копию коллекции:
        \n•\tпо убыванию цены
        \n•\tпо возрастанию диагонали экрана  Упорядоченные копии выводить в отдельные активности.
        \n\tРеализовать добавление, изменение и удаление элементов коллекции (используйте отдельную активность для редактирования объекта коллекции).
        \n\tИспользуйте <b>GridView</b> для отображения коллекции на главной активности, <b>RecyclerView</b> для вывода упорядоченных копий. Коллекцию хранить в бинарном файле, во внешней памяти. </string>
    <string name="HW005_exercises001"><b>Exercises 001</b></string>
    <string name="HW005_exercises002"><b>Exercises 002</b></string>
    <string name="HW005_exercises002_text">\t<b>Задача 2.</b>
        \n\tРазработайте Андроид-приложение для работы с базой данных, хранящей сведения о книгах <b>books_2.db</b> (база данных в папке CW этого задания).
        \n\tПриложение должно иметь следующий функционал:
        \n•\tВывод на главной активности в <b>ListView</b> данных о книгах – автор, название, год издания, категория. Разместить кнопки (команды меню) для увеличения стоимость книг Абрамяна М.Э. на 15%, уменьшения стоимость книг Абрамяна М.Э. на 15%
        \n•\tВывод списка авторов в отдельной активности – в <b>ListView</b>, используйте <b>SimpleCursorAdapter</b>. По клику на элемент списка вызывать активность редактирования автора, по отдельной кнопке (пункту меню) вызывать активность редактирования автора, но в режиме добавления новой записи
        \n•\tВывод списка категорий в отдельной активности – в <b>ListView</b>, используйте <b>SimpleCursorAdapter</b>
        \n•\tАктивность для добавления или редактирования автора, должен быть пункт меню для завершения активности (для возврата на вызывающую активность)
        \n•\tАктивность вывода фамилии и инициалов авторов и количество книг этих авторов
        \n•\tАктивность сведений о приложении и разработчике Переходы между главной активностью и вспомогательными реализовать при помощи меню. В каждой активности также должна быть реализована команда возврата на главную активность. </string>
    <string name="homework005_text">\t<b>Теоретическая часть</b>
        \n•\tВиджет <b>GridView</b>
        \n•\tХранение данных во внутренней памяти устройства
        \n•\tОсновные методы работы с файлами и каталогами в локальной памяти приложения
        \n•\tХранение данных во внешней памяти устройства
        \n•\tМесто хранения базы данных <b>SQLite</b> в приложении Андроид – внутренняя память устройства, папка <b>assets</b> приложения или внешняя память
        \n•\tВспомогательный класс <b>SQLiteOpenHelper</b> и переопределение его методов в производном классе для организации доступа к базам данных
        \n•\tМетоды для выполнения запросов <b>execSQL()</b>, <b>rowQuery()</b>
        \n•\tМетоды-оболочки запросов выборки данных <b>query()</b>, модификации данных <b>update()</b>, удаления данных <b>delete()</b>, добавления данных <b>insert()</b>
        \n•\tКласс <b>ContentValues</b> и передача данных в запросы
        \n•\tКласс <b>Cursor</b> и обход результатов запроса (коллекции или выборки данных)
        \n•\tНеобходимость закрытия базы данных после завершения работы с ней
        \n\t<b>Практическая часть</b></string>
    <string name="homework005">Home Work on 03.04.2022</string>
    <string name="item_amount">Amount</string>
    <string name="item_price">Price</string>
    <string name="item_year">Year</string>
    <string name="header_db_book">Books</string>
    <string name="image_button">Image Button</string>
    <string name="mni_hospital_adapter">Hospital</string>
    <string name="homework006">Home Work on 10.04.2022</string>
    <string name="homework006_text"><b>Теоретическая часть</b>
        \n•\tРеализация репозитория в приложениях Андроид с базой данных
        \n•\tПонятие о фрагментах
        \n•\tЖизненный цикл фрагмента
        \n•\tВзаимодействие между фрагментов
        \n•\tФрагменты в альбомном и портретном режиме
        \n•\tПотоки исполнения в <b>Android</b>
        \n•\tВзаимодействие с элементами интерфейса из потоков исполнения
        \n•\tМетоды <b>post()</b> и <b>postDelayed()</b> элементов интерфейса
        \n•\tПотоки исполнения и фрагменты
        \n•\tПрименение сторонних библиотек на примере <b>Gson</b> – библиотеки для работы с форматом <b>JSON</b>
        \n•\tСохранение данных в формате <b>JSON</b>
        \n•\tЧтение данных из файла в формате <b>JSON</b></string>
    <string name="HW006_exercises001"><b>Exercises 001</b></string>
    <string name="HW006_exercises001_text"><b>Задача 1.</b>  Разработайте Андроид-приложение для работы с существующей базой данных.
        \n\tРеализуйте репозитории для таблиц базы данных. База данных <b>«Платный прием в поликлинике»</b>
        \n\tОписание предметной области
        \n\tПлатный прием пациентов (консультации специалистов) проводится врачами разных специальностей (хирург, терапевт, кардиолог, офтальмолог и т.д.). Несколько врачей могут иметь одну и ту же специальность.При оформлении приема должна быть сформирована квитанция об оплате приема, в которой указывается информация о пациенте, о враче, который консультирует пациента, о стоимости приема, о дате приема.Пациент оплачивает за прием некоторую сумму, которая устанавливается персонально для каждого врача.
        \n\tЗа каждый прием врачу отчисляется фиксированный процент от стоимости приема.Процент отчисления от стоимости приема на зарплату врача также устанавливается персонально для каждого врача.Размер начисляемой врачу заработной платы за каждый прием вычисляется по формуле: <b>Стоимость приема * Процент отчисления от стоимости приема</b> на зарплату врача.Из этой суммы вычитается подоходный налог, составляющий <b>13%</b> от суммы.</string>
    <string name="btn_GoToHW007">Home Work on 17.04.2022</string>
    <string name="btn_GoToHW008">Home Work on 15.05.2022</string>
    <string name="btn_GoToHW006_Exercises001">Go to Exercises 001</string>
    <string name="HW006_exercises001_request">ЗАПРОСЫ</string>
    <string name="HW006_exercises001_request01">Выбирает информацию о пациентах с фамилиями, начинающимися на заданную параметром последовательность букв</string>
    <string name="HW006_exercises001_request02">Выбирает информацию о врачах, для которых значение в поле <b>Процент отчисления на зарплату</b>, больше 2.3% (задавать параметром)</string>
    <string name="HW006_exercises001_request03">Выбирает информацию о приемах за некоторый период, заданный параметрами</string>
    <string name="HW006_exercises001_request04">Выбирает информацию о докторах, специальность которых задана параметром </string>
    <string name="HW006_exercises001_request05">Вычисляет размер заработной платы врача за каждый прием. Включает поля <b>Фамилия врача, Имя врача, Отчество врача, Специальность врача, Стоимость приема, Зарплата.</b> Сортировка по полю <b>Специальность врача</b></string>
    <string name="HW006_exercises001_request06">Выполняет группировку по полю <b>Дата приема</b>. Для каждой даты вычисляет максимальную стоимость приема</string>
    <string name="HW006_exercises001_request07">Выполняет группировку по полю <b>Специальность</b>. Для каждой специальности вычисляет средний Процент отчисления на зарплату от стоимости приема</string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="HW006_exercises001_getAllUsers">Получить всех пользователей</string>
    <string name="HW006_exercises001_getAllAddresses">Получить все адресса</string>
    <string name="homework007">Home Work on 17.04.2022</string>
    <string name="HW007_exercises001"><b>Exercises 001</b></string>
    <string name="HW007_exercises002"><b>Exercises 002</b></string>
    <string name="HW007_exercises003"><b>Exercises 003</b></string>
    <string name="HW007_exercises003_text"><b>Задача 3.</b> \n\tРазработайте Андроид-приложение для демонстрации видов анимации на элементе интерфейса – <b>ImageView</b>.
        \n\tИз контекстного меню элемента запускайте анимации для:
        \n\t•\tМасштабирования
        \n\t•\tВращения
        \n\t•\tПеремещения
        \n\t•\tПрозрачности
        \n\t•\tКомбинация масштабирования и вращения</string>
    <string name="HW007_exercises002_text"><b>Задача 2.</b> \n\tРазработайте Андроид-приложение для работы с файлом данных в формате <b>JSON</b>.
        \n\tПриложение обрабатывает данные о пациентах – фамилия и инициалы, дата рождения, номер и серия паспорта, адрес проживания (улица, дом, квартира).
        \n\tФайл данных разместить в локальной памяти приложения, загружать файл данных при старте главной активности приложения, выгружать данные в файл при финише главной активности.
        \n\tТакже записывать данные в файл при добавлении/изменении или удалении пациента.  В главной активности выводить список пациентов в <b>RecyclerView</b>, использовать адаптер с кнопками редактирования и удаления пациента.
        \n\tВ приложении использовать диалоги на фрагментах, обязательно – диалог для ввода/редактирования данных о пациенте. По командам меню упорядочивать данные по фамилии, по году рождения, по улице проживания.
        \n\tКаждый из вариантов упорядочивания реализовать в отдельном <b>AsyncTask</b>. Выводить упорядоченные данные в диалогах, в <b>ListView</b> (использовать упрощенный макет для вывода – фамилия и инициалы, паспорт и дата рождения в одну строку).
        \n\tПредусмотрите в меню и на активности кнопку добавления пациента. Продумайте разметку для вертикальной и горизонтальной ориентации устройства.</string>
    <string name="HW007_exercises001_text"><b>Задача 1.</b> \n\tРазработайте Андроид-приложение для работы с файлом данных в формате <b>JSON</b>. Файл разместить в локальной памяти.
        \n\tНа активности должны быть команды генерации файла данных, завершения работы приложения.
        \n\tКонтент и выполняемые задачи должны сохраняться при поворотах устройства. Требуется вести учет заявок на авиабилеты. Каждая заявка содержит: пункт назначения, номер рейса, фамилию и инициалы пассажира, желаемую дату вылета.
        \n\tПриложение должно обеспечивать выбор с помощью меню и выполнение одной из следующих функций:
        \n\t•\tдобавление заявки в коллекцию;
        \n\t•\tудаление заявки из коллекции;
        \n\t•\tсериализация коллекции заявок в файл <b>JSON</b> – в отдельной задаче <b>AsyncTask</b>;
        \n\t•\tдесериализация коллекции заявок из файла <b>JSON</b> – в отдельной задаче <b>AsyncTask</b>;
        \n\t•\tвывод сведений о приложении и разработчике
        \n\t•\tфрагмент статистики (размещен на главной активности) должен поддерживать выполнение запросов:
        \n\t\to\tопределение количества заявок в заданном диапазоне дат
        \n\t\to\tопределение количества заявок на заданный номер рейса</string>
    <string name="homework007_text"><b>Теоретическая часть</b>
        \n\t•\tРеализация многопоточной обработки при помощи класса AsyncTask
        \n\t•\tСоздание и запуск задачи
        \n\t•\tУведомление пользователя о процессе выполнения задачи
        \n\t•\tПолучение результата из задачи
        \n\t•\tПрерывание задачи
        \n\t•\tСохранение задачи при поворотах устройства
        \n\t•\t<b>Cell/</b>-анимация в Андроид
        \n\t•\t<b>Tween</b>-анимация элементов интерфейса в Андроид
        \n\t<b>Практическая часть</b> "</string>
    <string name="btn_GoToHW007_Exercises001">Go To Exercises 001</string>
    <string name="btn_GoToHW007_Exercises002">Go To Exercises 002</string>
    <string name="btn_GoToHW007_Exercises003">Go To Exercises 003</string>
    <string name="mni_aviasales">Aviasales</string>
    <string name="mni_hospital">Hospital</string>
    <string name="mni_animation">Animation</string>
    <string name="mni_about">About</string>
    <string name="homework007_app_name">Home Work 007</string>
    <string name="mni_data">Data</string>
    <string name="mni_time">Time</string>
    <string name="HW006_exercises001_request01hint">Введите последовательность букв</string>
    <string name="HW006_exercises001_request02hint">Введите ставку врача</string>
    <string name="HW006_exercises001_request04hint">Введите последовательность букв</string>
    <string name="HW006_exercises001_request07hint" />
    <string name="HW006_exercises001_request06hint" />
    <string name="HW006_exercises001_request05hint" />
    <string name="HW006_exercises001_request03hint" />
    <string name="HW006_exercises001_getAllAddresseshint" />
    <string name="HW006_exercises001_getAllUsershint" />
    <string name="btn_Scale">Scale</string>
    <string name="btn_Rotate">Rotate</string>
    <string name="btn_Transparent">Transparent</string>
    <string name="btn_Visibility">Visibility</string>
    <string name="btn_Combo">Combo</string>
    <string name="scale_fragment_title">Scale</string>
    <string name="rotate_fragment_FromDegrees">fromDegrees</string>
    <string name="rotate_fragment_ToDegrees">toDegrees</string>
    <string name="rotate_fragment_Duration">duration</string>
    <string name="zero">0</string>
    <string name="rotate_fragment_PivotX">pivotX</string>
    <string name="_0procent">0%</string>
    <string name="_50procent">50%</string>
    <string name="_100procent">100%</string>
    <string name="rotate_fragment_PivotY">pivotY</string>
    <string name="restart">Restart</string>
    <string name="repeat">Repeat</string>
    <string name="rotate_fragment_RepeatMode">repeatMode</string>
    <string name="rotate_fragment_RepeatCount">repeatCount</string>
    <string name="_infinite">infinite</string>
    <string name="rotate_fragment_title">Rotate</string>

    <string name="scale_fragment_FromXScale">fromXScale</string>
    <string name="scale_fragment_ToXScale">toXScale</string>
    <string name="scale_fragment_FromYScale">fromYScale</string>
    <string name="scale_fragment_ToYScale">toYScale</string>
    <string name="scale_fragment_Duration">duration</string>
    <string name="scale_fragment_PivotX">pivotX</string>
    <string name="scale_fragment_PivotY">pivotY</string>
    <string name="scale_fragment_RepeatMode">repeatMode</string>
    <string name="scale_fragment_RepeatCount">repeatCount</string>

</resources>